# 工作流的名称。 GitHub 在存储库的“操作”选项卡下显示工作流的名称。如果省略 `name`，GitHub 会显示相对于存储库根目录的工作流文件路径。
name: publish npm

# This example workflow assumes that the default branch for your repository is `main`. If the default branch has a different name, edit this example and add your repository's default branch.
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

#
jobs:
  build:
    # <!-- This is a YAML comment for use in annotated code examples. -->
    # 可以使用其他操作系统运行该工作流。
    #
    # 入门工作流使用 GitHub 托管的 `ubuntu-latest` 运行器将作业配置为在 Linux 上运行。 可以更改 `runs-on` 键以在不同的操作系统上运行作业。
    #
    # 例如，你可以通过指定 `runs-on: windows-latest` 使用 GitHub 托管的 Windows 运行器。 或者，你可以使用 `runs-on: macos-latest` 在 GitHub 托管的 macOS 运行器上运行。
    #
    # 您还可以在 Docker 容器中运行作业，或者提供在自己的基础架构上运行的自托管运行器。 有关详细信息，请参阅“[AUTOTITLE](/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idruns-on)”。
    runs-on: ubuntu-latest
    steps:
      # 该步骤使用 `actions/checkout` 操作在运行器上下载存储库的副本。
      - uses: actions/checkout@v3
      # This step uses the `actions/setup-node` action to set up Node.js for each version indicated by the `matrix.node-version` key above.
      - uses: pnpm/action-setup@v2
        with:
          version: 7
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'
          cache: pnpm
      # This step runs `npm ci` to install any dependencies listed in your `package.json` file.
      - run: pnpm install --no-frozen-lockfile
      # This step runs the `build` script if there is one specified under the `scripts` key in your `package.json` file.
      - run: pnpm run build
      # This step runs the `test` script that is specified under the `scripts` key in your `package.json` file.
      - run: |
          cd tests
          pnpm install --no-frozen-lockfile
          pnpm test
      - run: pnpm build
      - run: npm publish --access public
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN  }}
